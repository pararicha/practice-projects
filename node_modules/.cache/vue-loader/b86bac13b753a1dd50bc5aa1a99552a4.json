{"remainingRequest":"/Users/richaparashar/richa/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/richaparashar/richa/src/components/wordcount.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/richaparashar/richa/src/components/wordcount.vue","mtime":1601561877833},{"path":"/Users/richaparashar/richa/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/richaparashar/richa/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/richaparashar/richa/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/richaparashar/richa/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/richaparashar/richa/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCiAKIC50ZXh0Ym94ewogIG1hcmdpbi10b3A6IDEwcHg7CiAgLyogdHJhbnNpdGlvbjogd2lkdGggMC40cyBlYXNlLWluLW91dDsgKi8KfQoudGV4dGJveDpmb2N1cyB7CiAgd2lkdGg6IDUwJTsKICBoZWlnaHQ6MjAwcHg7Cn0K"},{"version":3,"sources":["wordcount.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"wordcount.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div id= \"WordCount\">\n  <p> Calculate Word count</p>\n  <p> Input 1</p>\n  <textarea class= \"textbox\" v-model=\"a\"/>\n  <p>Wordcount: {{Word}}</p>\n  \n  <!-- <p> sum:{{Add}}</p> -->\n<router-link :to =\"{name:'todo', params: { Word } }\">Calculate Sum</router-link>\n  \n  \n</div>\n</template>\n<script>\n\nexport default {\n    name: 'WordCount',\n    data() {\n        return{\n    a: \"\",\n  }},\n    \n    computed :{\n        Word: function()\n        {  \n            var regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~ ]/g;\n            var arr = this.a.toLowerCase().split(regex);\n            let forDeletion = ['the','is','on','a','to','of','that'];\n            var newArr = arr.filter(item => !forDeletion.includes(item));\n            var counts={};\n            newArr.forEach(function(x) { counts[x] = (counts[x] || 0)+1 ; });\n            counts[\"\"]=0;\n            var result = Object.keys(counts).map(function (key) { \n          \n        // Using Number() to convert key to number type \n        // Using obj[key] to retrieve key value \n                return [key, counts[key]]; \n            }); \n            return result.sort(([,a],[,b]) => b-a).slice(0,10);\n            \n            //return Object.entries(counts).sort(([,a],[,b]) => b-a).slice(0,10);\n         }\n       \n\n    }\n\n    \n}\n</script>\n<style> \n .textbox{\n  margin-top: 10px;\n  /* transition: width 0.4s ease-in-out; */\n}\n.textbox:focus {\n  width: 50%;\n  height:200px;\n}\n</style>"]}]}