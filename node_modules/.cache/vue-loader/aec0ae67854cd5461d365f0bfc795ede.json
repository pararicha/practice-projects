{"remainingRequest":"/Users/richaparashar/richa/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/richaparashar/richa/src/components/Sort.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/richaparashar/richa/src/components/Sort.vue","mtime":1601391214257},{"path":"/Users/richaparashar/richa/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/richaparashar/richa/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/richaparashar/richa/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/richaparashar/richa/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCgpleHBvcnQgZGVmYXVsdCB7CiAgICBuYW1lOiAnU29ydCcsCiAgICBkYXRhKCkgewogICAgICAgIHJldHVybnsKICAgIGE6ICIiLAogICAgYjogIiIsCiAgfX0sCiAgICAKICAgIGNvbXB1dGVkIDp7CiAgICAgICAgQWRkOiBmdW5jdGlvbigpCiAgICAgICAge3ZhciBvdXRwdXQgPSAwOwogICAgICAgICAgICAKICAgICAgICAgICAKICAgICAgICAgICAgb3V0cHV0PSBwYXJzZUludCh0aGlzLmEpK3BhcnNlSW50KHRoaXMuYik7CiAgICAgICAgICAgIAogICAgICAgICAgICBpZihpc05hTihvdXRwdXQpKXsKICAgICAgICAgICAgICAgIHJldHVybiAwOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGVsc2V7CiAgICAgICAgICAgICAgICByZXR1cm4gb3V0cHV0OwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgCgogICAgfQoKICAgIAp9Cg=="},{"version":3,"sources":["Sort.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;AAGA","file":"Sort.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div id= \"sort\">\n  <p> Calculate Sum</p>\n  <p> Input 1</p>\n  <input v-model=\"a\">\n  <p> Input 2</p>\n  <input v-model=\"b\">\n  <p> sum:{{Add}}</p>\n  <router-link :to =\"{name:'todo', params: { Add } }\">Calculate Sum</router-link>\n  \n  \n</div>\n</template>\n<script>\n\nexport default {\n    name: 'Sort',\n    data() {\n        return{\n    a: \"\",\n    b: \"\",\n  }},\n    \n    computed :{\n        Add: function()\n        {var output = 0;\n            \n           \n            output= parseInt(this.a)+parseInt(this.b);\n            \n            if(isNaN(output)){\n                return 0;\n            }\n            else{\n                return output;\n            }\n        }\n       \n\n    }\n\n    \n}\n</script>"]}]}